<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LabelControl1.Text" xml:space="preserve">
    <value>How to use this software.

Step 1: School Setup
- Go to school setup, and set up the school details.
- Set the Academic Session and the current term.
- Add Form and Subject Teacher Login Details.

Step 2: Set up Class
- Add the name of the class and select the Form teacher.

Step 3: Set up Subjects
- Select the classes you want to add subjects.
- Click the subjects to move to the subject selection panel.
- Click the save button to save the subjects for each of the classes selected.
- Click the 'Assign Teachers' button to add select subject teacher already added in the school setup.
- Click the 'Save' Button to save your settings.

Step 4: Add Students
- Click on each class button to add student to the list.
- Click the save button to save your work.

Step 5: Add Scores
- Select the class from the combo box, to load subjects already saved.
- Once subjects and students has been added to the classes, 
- Click on each subject button to add scores for each student.
- Save each sheet before clicking another subject to prevent loss of work.

Step 6: Printing of Reports

- You can now print the sheets for each class that is selected."</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HyperlinkLabelControl2.Appearance.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAedEVYdFRpdGxlAExldHRlcjtlLW1haWw7ZW1haWw7
        bWFpbBqRk9oAAAESSURBVFhHxZZBCoMwFER7MMGtpxI8Xu8heIw0I34Z48TEqt/Fg2QS/zy7kH5CCK8i
        Q09k6IkMPZGhJzL0RIaebDZN07SRbyQ8BGa33JkKTHT5KSbuTAXmS8t6sP0NDOl8QwpE+mV/h4SV95ZZ
        H8gJADxwVQLPbsoBdx4JgCsSshxwZ0kA/CORLQfcWSMAzkgclgPurBUANRLFcsCdZwRseE6idL7CnbUC
        /Gbqlyidb+DOGgEebhmXlM4tW+HOkoAablhJ6XwnwZ1HAkflBs5K5zsJ7swJ7D6fF9h91q0PSIFlfUe5
        YRLzHmsjFRjt0oOM3JkKdJEn/xNgdsedG4E3kKEnMvREhp7I0BMZeiJDP8LnB+lHY9z86CgmAAAAAElF
        TkSuQmCC
</value>
  </data>
  <data name="HyperlinkLabelControl1.Appearance.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wqHf8Rtoy+OvYqyIZgAAAABJRU5ErkJggg==
</value>
  </data>
</root>